<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tsPrincipal.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRespaldo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAOMSURBVFhHtZdZqIxhGMfHli37Eoos2QpRXCBK9rKEuLCV
        ZBcJZbmwhEK2ZEt2ciEu7NkiS5YbkRBZSmTfsq+/3/c1pzFn5ptxzpx//TrvfDNn3ud93mebWIRqw1BY
        CcfhNryCb/ALvsILuAmHYCkMgmpQYJWF8XAZfsN7OA1rYBpoUB/oBf1gOMyA9XAePsFPOAPDoCRkLb/8
        KbwBN+wIJeB/VBq6wxbQmHvQEzLKDX/AYqjggxyoBmwEr2umD9JpLHyBbsGr3GsEeC1eW0rdhUXhssi0
        E06Gy/wy2PqHyyLTFHgYLvPrD2wNl0UmT/8oXOaXBuiF6cGr3Mosso64R6QBu8HCYsFpDblQZ7CeWEv2
        QaQB5morsOjojQvgvTWDYpCNioPGz4LrYPrthwYwBjIaEFc7sLI9Ad+zMGnQLlgB82AuzIdVsBeuwEfw
        8/dhOTSHuDIakC5Hm4Ll1gLlNZ2AS3AVLsIx2AELYAjUh1QaB5EGTA2XRSY9F2nAc2gYvMq9vFL7QqQB
        NiGNGOiDHMmg9O4/gN8faYCt1Xy1IRlQI6EiFETVYSLcgs8wG2zxkQbEs8C02wxa7eBxDhw0NKgTGJQO
        Kna6OmCkd4HRsBo03sbj4OKB6oKyRTu0pFSiAXE5mDh4GDwa8RKsD342GZ8/g1OwBLpCKcgkMyYYWPyS
        wS4yqDz4Ty2hDbSAelAGUqkKOEV58mtgCs8BvaesM8G+GmCzyLbiZaMB8BqcGbeBdWIDuOlbsPv6nmNb
        nhstNOV8UEi5uXFglfQqE+XIZqwY7N8hzwDLq9YZqQZUOrdmkm735G6eLGdMRzQxSN03zwCDsBIsA2u6
        9d8SaxluBNlej3eua5NPrnqAzSkRO2bg/sQsMP/1wkGwlWqglczfBWfB5wfgMDiK34DGoAw47zxbWayC
        oBjlIoX8gLXBCunpTLO1YEA5STtLToL4iY12u2Q2ag+md2wTOJhW9kUhZS1YFy4zykN7+FhVuAP+xDLH
        C6OF4DwQuDaDnJKOhMuwOBwF02M72MEKIqcfR7sJwav00v2mqj3oH/UFpx8D8wGYMrpKg2wyydngSWtB
        B3AgcQh1JLOPBCmWQm5u59UDadUE/DmlV0wrM0H00Dswj80Q5z6fa/BjqAnKq/A9+8hk8GAexE09uX//
        q9Z4RW2hN3hSf8hax01f+0KqAPbze8BGpYEGnHee4PZY7C8envRDIcI/OQAAAABJRU5ErkJggg==
</value>
  </data>
</root>